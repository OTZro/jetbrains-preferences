<application>
  <component name="VimEditorSettings">
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>ATTACHMENT</entry>
        <entry>WebSocket</entry>
        <entry>message_group_member</entry>
        <entry>isCross</entry>
        <entry>inBlack</entry>
        <entry>user</entry>
        <entry>$user</entry>
        <entry>projectGro</entry>
        <entry>follow</entry>
        <entry>attachment</entry>
        <entry>users_compos</entry>
        <entry encoding="base64">XDxyZXF1ZXN0XD4=</entry>
        <entry encoding="base64">XDxmdW5jdGlvblw+</entry>
        <entry encoding="base64">XDx1c2VcPg==</entry>
        <entry encoding="base64">XDxwdWJsaWNcPg==</entry>
        <entry>keyword</entry>
        <entry>csrf</entry>
        <entry>picture</entry>
        <entry encoding="base64">XDxDb250cmFjdHNcPg==</entry>
        <entry>:136</entry>
      </history-search>
      <history-cmd>
        <entry>408</entry>
        <entry>520</entry>
        <entry>127</entry>
        <entry>255</entry>
        <entry>3986</entry>
        <entry>109</entry>
        <entry>137</entry>
        <entry>43</entry>
        <entry>21</entry>
        <entry>134</entry>
        <entry>74</entry>
        <entry>92</entry>
        <entry>124</entry>
        <entry>61</entry>
        <entry>150</entry>
        <entry>41</entry>
        <entry>125</entry>
        <entry>wq</entry>
        <entry>w</entry>
        <entry>148</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="/Dummy.txt" timestamp="1586750624311">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/component/shipment/booking/booking_hbl_board.component.js" timestamp="1586761707234">
        <mark key="[" line="698" column="19" />
        <mark key="]" line="698" column="19" />
        <mark key="^" line="702" column="46" />
        <mark key="." line="698" column="19" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/component/shipment/booking/booking_hbl_board.html" timestamp="1586761522275">
        <mark key="[" line="757" column="113" />
        <mark key="]" line="757" column="112" />
        <mark key="." line="757" column="111" />
        <mark key="^" line="757" column="112" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/sales/trade_partner_entry/index.html" timestamp="1586752043829">
        <mark key="[" line="1115" column="33" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/component/trade_partner/trade_party_entry.html" timestamp="1586752743510">
        <mark key="[" line="88" column="28" />
        <mark key="]" line="101" column="0" />
        <mark key="^" line="99" column="40" />
        <mark key="." line="101" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/component/shipment/booking/vs_mbl_board.component.js" timestamp="1586760891322">
        <mark key="[" line="286" column="0" />
        <mark key="]" line="286" column="0" />
        <mark key="." line="286" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/lib/angular/shared-component/hc-autocomplete-base/hc-autocomplete-base.component.ts" timestamp="1586760423775">
        <mark key="[" line="125" column="9" />
        <mark key="]" line="125" column="9" />
        <mark key="." line="125" column="9" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/shipment/ocean/import_basic_entry/index.html" timestamp="1586758870086">
        <mark key="[" line="187" column="95" />
        <mark key="]" line="187" column="95" />
        <mark key="." line="187" column="95" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/settings/awb_management/index.html" timestamp="1586752318884">
        <mark key="[" line="70" column="28" />
        <mark key="]" line="70" column="45" />
        <mark key="." line="70" column="45" />
        <mark key="^" line="70" column="45" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/user/user_profile/controller.js" timestamp="1586759341487">
        <mark key="[" line="378" column="0" />
        <mark key="]" line="378" column="0" />
        <mark key="." line="378" column="0" />
      </file>
      <file name="/index.html" timestamp="1586750797077">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="7" column="10" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/component/trade_partner/trade_party_entry.component.js" timestamp="1586751990745">
        <mark key="[" line="139" column="44" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/lib/angular/shared-component/hc-tp-select/hc-tp-select.component.ts" timestamp="1586759268945">
        <mark key="[" line="221" column="24" />
        <mark key="]" line="14" column="0" />
        <mark key="." line="14" column="0" />
        <mark key="^" line="14" column="39" />
      </file>
    </filemarks>
    <jumps>
      <jump line="1236" column="63" filename="$USER_HOME$/gofreight/fms/app/freight/views_reports/utility.py" />
      <jump line="1232" column="4" filename="$USER_HOME$/gofreight/fms/app/freight/views_reports/utility.py" />
      <jump line="134" column="29" filename="$USER_HOME$/gofreight/fms/app/jobflow/views.py" />
      <jump line="69" column="39" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/setting/app.component.html" />
      <jump line="0" column="0" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/setting/app.component.html" />
      <jump line="5" column="4" filename="$USER_HOME$/gofreight/fms/frontend/src/component_form/trade_partner/form_trade_partner_info_picker.html" />
      <jump line="28" column="0" filename="$USER_HOME$/gofreight/fms/frontend/src/lib/angular/bootstrap-tool/hc-popover-hover.directive.ts" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="a" type="4">
        <keys>
          <key char="70" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="36" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="&quot;" type="4">
        <text>Before</text>
      </register>
      <register name="b" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="118" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="c" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="d" type="4">
        <text>2ddj2dd</text>
      </register>
      <register name="f" type="4">
        <keys>
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="j" type="4">
        <text>2ddkkkk2dd</text>
      </register>
      <register name="l" type="4">
        <keys>
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="-" type="4">
        <text>Before</text>
      </register>
      <register name="m" type="4">
        <keys>
          <key char="48" code="0" mods="0" />
          <key char="71" code="0" mods="0" />
          <key char="49" code="0" mods="0" />
          <key char="71" code="0" mods="0" />
          <key char="79" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="71" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="63" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="n" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="/" type="4">
        <text>:136</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImN1c3RvbWVyIgo=</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="q" type="4">
        <keys>
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgXy5zZXQodGhpcy5oYmwuZGF0YSwgbW9kZWxOYW1lLCBuZXdWYWwpOwo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgdGhpcy5vblRyYWRlUGFydG5lckNoYW5nZWQoZmllbGQpOwo=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgdGhpcy5vblRyYWRlUGFydG5lckNoYW5nZWQoZmllbGQpOwo=</text>
      </register>
      <register name="t" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="56" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgY29uc29sZS5sb2coXy5nZXQodGhpcy5oYmwuZGF0YSwgZmllbGQpKTsK</text>
      </register>
      <register name="v" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="118" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgY29uc29sZS5sb2coJ0FmdGVyIHZhbHVlOicgKyBfLmdldCh0aGlzLmhibC5kYXRhLCBmaWVsZCkpOwo=</text>
      </register>
      <register name="w" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgY29uc29sZS5sb2coXy5nZXQodGhpcy5oYmwuZGF0YSwgZmllbGQpKTsK</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgY29uc29sZS5sb2coJ0JlZm9yZSB2YWx1ZTonKTsK</text>
      </register>
      <register name="y" type="4">
        <text />
      </register>
      <register name=":" type="4">
        <text>148</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="false" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>