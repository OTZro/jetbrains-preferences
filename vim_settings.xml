<application>
  <component name="VimEditorSettings">
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>ATTACHMENT</entry>
        <entry>WebSocket</entry>
        <entry>message_group_member</entry>
        <entry>isCross</entry>
        <entry>inBlack</entry>
        <entry>user</entry>
        <entry>$user</entry>
        <entry>projectGro</entry>
        <entry>follow</entry>
        <entry>attachment</entry>
        <entry>users_compos</entry>
        <entry encoding="base64">XDxyZXF1ZXN0XD4=</entry>
        <entry encoding="base64">XDxmdW5jdGlvblw+</entry>
        <entry encoding="base64">XDx1c2VcPg==</entry>
        <entry encoding="base64">XDxwdWJsaWNcPg==</entry>
        <entry>keyword</entry>
        <entry>csrf</entry>
        <entry>picture</entry>
        <entry encoding="base64">XDxDb250cmFjdHNcPg==</entry>
        <entry>:136</entry>
      </history-search>
      <history-cmd>
        <entry>417</entry>
        <entry>246</entry>
        <entry>471</entry>
        <entry>17</entry>
        <entry>80</entry>
        <entry>200</entry>
        <entry>47</entry>
        <entry>97</entry>
        <entry>409</entry>
        <entry>376</entry>
        <entry>136</entry>
        <entry>129</entry>
        <entry>124</entry>
        <entry>74</entry>
        <entry>210</entry>
        <entry>67</entry>
        <entry>733</entry>
        <entry>157</entry>
        <entry>193</entry>
        <entry>875</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/center/controller.js" timestamp="1596607014728">
        <mark key="[" line="51" column="31" />
        <mark key="]" line="51" column="0" />
        <mark key="." line="51" column="0" />
        <mark key="^" line="51" column="22" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/app/accounting/payment_plan/list/api.py" timestamp="1596610810048">
        <mark key="[" line="53" column="83" />
        <mark key="]" line="51" column="11" />
        <mark key="." line="51" column="11" />
      </file>
      <file name="/Python Console" timestamp="1596609525124">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/app/accounting/payment_plan/list/sz.py" timestamp="1596611969885">
        <mark key="[" line="95" column="11" />
        <mark key="]" line="94" column="16" />
        <mark key="." line="94" column="15" />
        <mark key="^" line="94" column="16" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/center/app.component.ts" timestamp="1596612497808">
        <mark key="[" line="4" column="111" />
        <mark key="]" line="85" column="0" />
        <mark key="." line="85" column="0" />
        <mark key="^" line="125" column="39" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/app/jobflow/approval/service.py" timestamp="1596612909328">
        <mark key="[" line="379" column="0" />
        <mark key="]" line="379" column="0" />
        <mark key="^" line="278" column="35" />
        <mark key="." line="379" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/lib/aj/pagination.js" timestamp="1596606952939">
        <mark key="^" line="184" column="11" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/lib/angular/shared-ag-grid/cell-renderers/hc-pagination-list-col-text.ts" timestamp="1596612524806">
        <mark key="[" line="45" column="16" />
        <mark key="]" line="45" column="0" />
        <mark key="." line="45" column="0" />
      </file>
      <file name="/app.component.ts" timestamp="1596612414389" />
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/center/app.component.html" timestamp="1596612420500">
        <mark key="[" line="110" column="138" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/app/accounting/payment_plan/entry/api.py" timestamp="1596612695330">
        <mark key="[" line="248" column="58" />
        <mark key="]" line="252" column="24" />
        <mark key="^" line="73" column="17" />
        <mark key="." line="252" column="24" />
      </file>
      <file name="/Django Console" timestamp="1596613659110">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/.env" timestamp="1596613334166">
        <mark key="[" line="21" column="0" />
        <mark key="]" line="21" column="0" />
        <mark key="." line="21" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/accounting/payment-plan/payment-plan-basic/payment-plan-basic.component.ts" timestamp="1596601513305" />
      <file name="$USER_HOME$/gofreight/fms/app/accounting/payment_plan/services/invoice_block_service.py" timestamp="1596614289192" />
      <file name="$USER_HOME$/gofreight/fms/lib/log/log_def.py" timestamp="1596608650631">
        <mark key="[" line="130" column="0" />
        <mark key="]" line="130" column="0" />
        <mark key="^" line="130" column="20" />
        <mark key="." line="130" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/test/accounting/payment_plan/test_payment_plan_api.py" timestamp="1596613898422">
        <mark key="[" line="150" column="33" />
        <mark key="]" line="150" column="33" />
        <mark key="." line="150" column="33" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/app/freight/models/accounting.py" timestamp="1596614057457">
        <mark key="[" line="1522" column="0" />
        <mark key="]" line="1522" column="0" />
        <mark key="^" line="1512" column="43" />
        <mark key="." line="1522" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/app/freight/migrations/0030_v1_20_olc_0096_make_payment_plan_can_approve.py" timestamp="1596613993970">
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="0" />
        <mark key="." line="17" column="0" />
      </file>
      <file name="$USER_HOME$/gofreight/fms/frontend/src/page/freight/accounting/payment-plan/app.component.ts" timestamp="1596608720691">
        <mark key="[" line="339" column="2" />
      </file>
    </filemarks>
    <jumps>
      <jump line="1236" column="63" filename="$USER_HOME$/gofreight/fms/app/freight/views_reports/utility.py" />
      <jump line="1232" column="4" filename="$USER_HOME$/gofreight/fms/app/freight/views_reports/utility.py" />
      <jump line="134" column="29" filename="$USER_HOME$/gofreight/fms/app/jobflow/views.py" />
      <jump line="69" column="39" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/setting/app.component.html" />
      <jump line="0" column="0" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/setting/app.component.html" />
      <jump line="5" column="4" filename="$USER_HOME$/gofreight/fms/frontend/src/component_form/trade_partner/form_trade_partner_info_picker.html" />
      <jump line="28" column="0" filename="$USER_HOME$/gofreight/fms/frontend/src/lib/angular/bootstrap-tool/hc-popover-hover.directive.ts" />
      <jump line="163" column="39" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/sales/trade_partner_entry/index.html" />
      <jump line="6" column="19" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/setting/rule.type.ts" />
      <jump line="34" column="24" filename="/amendment.py" />
      <jump line="8" column="34" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/accounting/prepaid_expanse/app.component.text_def.ts" />
      <jump line="45" column="105" filename="$USER_HOME$/gofreight/fms/test/accounting/transaction/updater/utility.py" />
      <jump line="118" column="4" filename="$USER_HOME$/gofreight/fms/test/accounting/transaction/updater/utility.py" />
      <jump line="52" column="82" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/center/app.component.html" />
      <jump line="24" column="42" filename="$USER_HOME$/gofreight/fms/app/accounting/transaction/db_updater/amortization.py" />
      <jump line="9" column="24" filename="$USER_HOME$/gofreight/ui-select/package.json" />
      <jump line="0" column="0" filename="/Dummy.txt" />
      <jump line="2" column="16" filename="$USER_HOME$/code/stock-analyze/docker/app/rootfs/etc/services.d/fetch/run" />
      <jump line="18" column="93" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/shipment/booking/booking_accounting_wizard/app.component.html" />
      <jump line="233" column="6" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/shipment/booking/booking_accounting_wizard/app.component.ts" />
      <jump line="71" column="87" filename="$USER_HOME$/gofreight/fms/frontend/src/page/freight/approval/center/app.component.html" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="a" type="4">
        <keys>
          <key char="70" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="36" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="&quot;" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="b" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="118" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="c" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="d" type="4">
        <text>2ddj2dd</text>
      </register>
      <register name="f" type="4">
        <keys>
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="j" type="4">
        <text>2ddkkkk2dd</text>
      </register>
      <register name="l" type="4">
        <keys>
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="-" type="4">
        <text>should_block_linked_invoice</text>
      </register>
      <register name="m" type="4">
        <keys>
          <key char="48" code="0" mods="0" />
          <key char="71" code="0" mods="0" />
          <key char="49" code="0" mods="0" />
          <key char="71" code="0" mods="0" />
          <key char="79" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="71" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="63" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="n" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="/" type="4">
        <text>:136</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgIGpxRWwuZGF0YSgnZGF0ZXJhbmdlcGlja2VyJykuc2V0U3RhcnREYXRlKG1pbkRhdGUpOwo=</text>
      </register>
      <register name="p" type="4">
        <keys>
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="59" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="95" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="39" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="q" type="4">
        <text>kkjk</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAgICAgcGF5bWVudF9wbGFuLnBheW1lbnRfcGxhbl9kZXRhaWxfc2V0IFwKICAgICAgICAgICAgICAgIC5maWx0ZXIoZnJlaWdodF9pbmZvX19pbnZvaWNlX2lkPWludikgXAogICAgICAgICAgICAgICAgLnVwZGF0ZShpc19mcmVpZ2h0X2luZm9faW52b2ljZV9ibG9ja19iZWZvcmVfcGxhbj1pbnYuaXNfYmxvY2sp</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICAK</text>
      </register>
      <register name="4" type="4">
        <text>migrations.AddField(
            model_name='paymentplandetail',
            name='is_freight_info_invoice_block_before_plan',
            field=models.BooleanField(default=False),
        ),</text>
      </register>
      <register name="t" type="4">
        <keys>
          <key char="106" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="107" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="113" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="56" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgIGlzX2ZyZWlnaHRfaW5mb19pbnZvaWNlX2Jsb2NrX2JlZm9yZV9wbGFuID0gbW9kZWxzLkJvb2xlYW5GaWVsZChkZWZhdWx0PUZhbHNlKQo=</text>
      </register>
      <register name="6" type="8">
        <text encoding="base64">cF9wbGFuXzEgPSAKcF9wbGFuXzEgPSA=</text>
      </register>
      <register name="v" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="118" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="7" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="w" type="4">
        <keys>
          <key char="94" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="91" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="93" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="y" type="4">
        <text />
      </register>
      <register name=":" type="4">
        <text>875</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="false" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>